<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gw.equipment.welder.dao.WelderDao">

    <resultMap id="welder" type="com.gw.entities.MachineWeldInfo">
        <id property="id"  column="id"></id>
        <result property="machineNo" column="machine_no"></result>
        <result property="status" column="status"></result>
        <result property="type" column="type"></result>
        <result property="firm" column="firm"></result>
        <result property="model" column="model"></result>
        <result property="deptId" column="dept_id"></result>
        <result property="gId" column="g_id"></result>
        <result property="isNetwork" column="is_network"></result>
        <result property="createTime" column="create_time"></result>
        <result property="ipPath" column="ip_path"></result>
        <result property="areaStr" column="areaStr"></result>
        <result property="bayStr" column="bayStr"></result>
        <result property="area" column="area"></result>
        <result property="bay" column="bay"></result>
        <result property="taskFlag" column="taskFlag"></result>
        <association property="sysDictionary" javaType="com.gw.entities.SysDictionary">
            <id property="id" column="id"></id>
            <result property="type" column="type"></result>
            <result property="typeName" column="type_name"></result>
            <result property="value" column="value"></result>
            <result property="valueName" column="value_name"></result>
            <result property="valueNames" column="value_names"></result>
            <result property="remarks" column="remarks"></result>
            <result property="valueNamess" column="value_namess"></result>
            <result property="valueNamesss" column="value_namesss"></result>
        </association>
        <association property="sysDept" javaType="com.gw.entities.SysDept">
            <id property="id" column="id"></id>
            <result property="name" column="name"></result>
            <result property="parentId" column="parent_id"></result>
        </association>
        <association property="machineGatherInfo" javaType="com.gw.entities.MachineGatherInfo">
            <id property="id" column="id"></id>
            <result property="gatherNo" column="gather_no"></result>
        </association>
    </resultMap>

    <select id="getList" resultMap="welder">
        SELECT m.id,m.machine_no,m.create_time,m.type,m.dept_id,m.g_id,m.`status`,m.model,m.firm,m.is_network,
        GROUP_CONCAT( machine_gather_info.gather_no ) gather_no,d.value_name,d1.value_name value_names,d2.value_name value_namess,
        d3.value_name value_namesss,s.`name`,m.ip_path,m.area,m.bay,d4.value_name areaStr,d5.value_name bayStr
        from machine_weld_info m
        left join sys_dictionary d on m.type = d.id
        left join sys_dictionary d1 on m.`status` = d1.id
        left join sys_dictionary d2 on m.firm = d2.id
        left join sys_dictionary d3 on m.model = d3.id
        left join sys_dictionary d4 on m.area = d4.id
        left join sys_dictionary d5 on m.bay = d5.id
        left join sys_dept s on m.dept_id = s.id
        LEFT JOIN machine_gather_info ON FIND_IN_SET( machine_gather_info.id,m.g_id )
        <where>
            <if test="machineNo != null and machineNo != ''">
                and  m.machine_no = #{machineNo}
            </if>
            <if test="type != null and type != ''">
                and  d.id = #{type}
            </if>
            <if test="grade != null and grade != ''">
                and  s.id = #{grade}
            </if>
            <if test="status != null and status != ''">
                and  d1.id = #{status}
            </if>
            <if test="firm != null and firm != ''">
                and  d2.id = #{firm}
            </if>
            <if test="isNetwork != null">
                and  m.is_network = #{isNetwork}
            </if>
            <if test="gatherNo != null and gatherNo != ''">
                and  g.gather_no = #{gatherNo}
            </if>
            <if test="ipPath != null and ipPath != ''">
                and  m.ip_path = #{ipPath}
            </if>
            <if test="model != null and model != ''">
                and  model = #{model}
            </if>
            <if test="area != null and area != ''">
                and  area = #{area}
            </if>
            <if test="bay != null and bay != ''">
                and  bay = #{bay}
            </if>
        </where>
        group by m.machine_no
    </select>

    <insert id="addWelder" parameterType="com.gw.entities.MachineWeldInfo">
        insert into machine_weld_info(machine_no,type,dept_id,firm,g_id,model,is_Network,status,ip_path,create_time,area,bay)
        values (#{machineWeldInfo.machineNo},#{machineWeldInfo.type},#{machineWeldInfo.deptId},#{machineWeldInfo.firm},
        #{machineWeldInfo.gId},#{machineWeldInfo.model},#{machineWeldInfo.isNetwork},#{machineWeldInfo.status},
        #{machineWeldInfo.ipPath},#{machineWeldInfo.createTime},#{machineWeldInfo.area},#{machineWeldInfo.bay})
    </insert>

    <select id="getById" resultMap="welder">
      SELECT
        m.id,
        m.machine_no,
        m.create_time,
        m.type,
        m.dept_id,
        m.g_id,
        m.`status`,
        m.model,
        m.firm,
        m.is_network,
        GROUP_CONCAT( machine_gather_info.gather_no ) gather_no,
        d.value_name,
        d1.value_name value_names,
        d2.value_name value_namess,
        d3.value_name value_namesss,
        s.`name`,
        m.ip_path,
        m.area,
		m.bay,
        d4.value_name areaStr,
        d5.value_name bayStr
        from
        machine_weld_info m
        left join sys_dictionary d on m.type = d.id
        left join sys_dictionary d1 on m.`status` = d1.id
        left join sys_dictionary d2 on m.firm = d2.id
        left join sys_dictionary d3 on m.model = d3.id
        left join sys_dictionary d4 on m.area = d4.id
        left join sys_dictionary d5 on m.bay = d5.id
        left join sys_dept s on m.dept_id = s.id
        left join machine_gather_info on FIND_IN_SET( machine_gather_info.id,m.g_id )
		where m.id=#{id}
		group by
        m.machine_no
    </select>

    <update id="updateWelder" parameterType="com.gw.entities.MachineWeldInfo">
        update machine_weld_info
        <trim prefix="set" suffixOverrides=",">
            <if test="machineWeldInfo.machineNo != null and machineWeldInfo.machineNo !=''">machine_no=#{machineWeldInfo.machineNo},</if>
            <if test="machineWeldInfo.type != null and machineWeldInfo.type !=''">type=#{machineWeldInfo.type},</if>
            <if test="machineWeldInfo.deptId != null and machineWeldInfo.deptId !=''">dept_id=#{machineWeldInfo.deptId},</if>
            <if test="machineWeldInfo.firm != null and machineWeldInfo.firm !=''">firm=#{machineWeldInfo.firm},</if>
            <if test="machineWeldInfo.gId != null and machineWeldInfo.gId !=''">g_id=#{machineWeldInfo.gId},</if>
            <if test="machineWeldInfo.model != null and machineWeldInfo.model !=''">model=#{machineWeldInfo.model},</if>
            <if test="machineWeldInfo.isNetwork != null">is_network=#{machineWeldInfo.isNetwork},</if>
            <if test="machineWeldInfo.status != null and machineWeldInfo.status !=''">status=#{machineWeldInfo.status},</if>
            <if test="machineWeldInfo.createTime != null and machineWeldInfo.createTime !=''">create_time=#{machineWeldInfo.createTime},</if>
            <if test="machineWeldInfo.area != null and machineWeldInfo.area !=''">area=#{machineWeldInfo.area},</if>
            <if test="machineWeldInfo.bay != null and machineWeldInfo.bay !=''">bay=#{machineWeldInfo.bay},</if>
            ip_path = #{machineWeldInfo.ipPath}
        </trim>
        where id=#{machineWeldInfo.id}
    </update>

    <delete id="deleteWelder">
        delete from machine_weld_info where id=#{id}
    </delete>

    <select id="getTypeId" resultType="java.lang.Byte">
        select id from sys_dictionary
        <where>
            value_name=#{type}
            <if test="dictionaryType != null and dictionaryType !=''">
                and `type` = #{dictionaryType}
            </if>
        </where>
    </select>

    <select id="getDeptId" resultType="java.lang.Long">
        select id from sys_dept where name =#{deptName}
    </select>

    <select id="getStatusId" resultType="java.lang.Byte">
        select id from sys_dictionary where value_name=#{status}
    </select>

    <select id="getFirmId" resultType="java.lang.Byte">
        select id from sys_dictionary where value_name=#{firm}
    </select>

    <select id="getGid" resultType="java.lang.Long">
        select id from machine_gather_info where gather_no=#{machineNo}
    </select>

    <select id="getModelId" resultType="java.lang.Byte">
        select id from sys_dictionary where value_name=#{model}
    </select>

    <insert id="save" parameterType="com.gw.entities.MachineWeldInfo">
        insert into machine_weld_info(machine_no,type,dept_id,status ,firm,is_netWork,g_id,model,create_time,area,bay)
        values(#{machineNo},#{type},#{deptId},#{status},#{firm},#{isNetwork},#{gId},#{model},#{createTime},#{machineWeldInfo.area},#{machineWeldInfo.bay})
    </insert>

    <select id="getDeptIdByWelderId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select dept_id from welder_info where `id` = #{id}
    </select>

    <!--获取历史曲线中焊机id以及设备编号-->
    <select id="selectIdAndMachineNoOfWelderInfos" resultType="com.gw.entities.MachineWeldInfo">
        select id,machine_no machineNo from machine_weld_info
    </select>

    <!--根据 部门id列表 查询设备信息列表-->
    <select id="selectMachineWeldInfosByDeptIds" parameterType="Long" resultType="com.gw.entities.MachineWeldInfo">
        (SELECT sxm.id,sxm.weld_no machine_no,sxm.create_time,sxm.equip_type type,sxm.dept_id,NULL g_id,sxm.weld_status,
        sxm.sx_model model,sxm.weld_firm firm,NULL is_network,
        sxm.weld_cid gatherNo,d.value_name typeStr,d1.value_name statusStr,
        d2.value_name firmStr,sxm.weld_model modelStr,s.`name`,sxm.weld_ip,sxm.area,
        sxm.bay,d4.value_name areaStr,d5.value_name bayStr,'sx' macFlag
        FROM machine_weldsx_info sxm
        LEFT JOIN sys_dictionary d ON sxm.equip_type = d.id
        LEFT JOIN sys_dictionary d1 ON sxm.weld_status = d1.id
        LEFT JOIN sys_dictionary d2 ON sxm.weld_firm = d2.id
        LEFT JOIN sys_dictionary d4 ON sxm.area = d4.id
        LEFT JOIN sys_dictionary d5 ON sxm.bay = d5.id
        LEFT JOIN sys_dept s ON sxm.dept_id = s.id
        LEFT JOIN machine_gather_info ON FIND_IN_SET( machine_gather_info.gather_no, sxm.weld_cid )
        WHERE sxm.dept_id IN
        <foreach collection="deptIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY sxm.weld_code )
        UNION ALL
        (SELECT m.id,m.machine_no,m.create_time,m.type,m.dept_id,m.g_id,m.`status`,
        m.model,m.firm,m.is_network,GROUP_CONCAT( machine_gather_info.gather_no ) gatherNo,
        d.value_name typeStr,d1.value_name statusStr,d2.value_name firmStr,d3.value_name modelStr,
        s.`name`,m.ip_path,m.area,m.bay,d4.value_name areaStr,d5.value_name bayStr,'otc' macFlag
        FROM machine_weld_info m
        LEFT JOIN sys_dictionary d ON m.type = d.id
        LEFT JOIN sys_dictionary d1 ON m.`status` = d1.id
        LEFT JOIN sys_dictionary d2 ON m.firm = d2.id
        LEFT JOIN sys_dictionary d3 ON m.model = d3.id
        LEFT JOIN sys_dictionary d4 ON m.area = d4.id
        LEFT JOIN sys_dictionary d5 ON m.bay = d5.id
        LEFT JOIN sys_dept s ON m.dept_id = s.id
        LEFT JOIN machine_gather_info ON FIND_IN_SET( machine_gather_info.id, m.g_id )
        WHERE m.dept_id IN
        <foreach collection="deptIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY m.machine_no)
    </select>

    <!--查询焊机列表(是否绑定了任务)-->
    <select id="selectMachineWeldInfosNoPage" resultType="com.gw.entities.MachineWeldInfo">
        select w.taskFlag,w.id,w.machine_no machineNo,w.create_time createTime,w.type,w.dept_id deptId,
        w.g_id gId,w.status,w.model,w.firm,
        w.is_network isNetwork,w.gather_no gatherNo,w.statusStr,w.firmStr,w.modelStr,w.areaStr,w.bayStr,
        w.`name`,w.ip_path ipPath,w.area,w.bay,w.macFlag,w.typeStr,w.statusStr
        from (select if(ti.task_no is null,0,1) taskFlag,sxm.id,sxm.weld_no machine_no,
        sxm.create_time,sxm.weld_kind type,sxm.dept_id,sxm.weld_cid g_id,sxm.weld_status status,sxm.sx_model model,
        sxm.weld_firm firm,
        null is_network,GROUP_CONCAT(DISTINCT machine_gather_info.gather_no ) gather_no,d.value_name typeStr,
        d1.value_name statusStr,d2.value_name firmStr,d3.value_name modelStr,s.`name`,sxm.weld_ip ip_path,
        sxm.area,sxm.bay,d4.value_name areaStr,d5.value_name bayStr,'sx' macFlag
        from machine_weldsx_info sxm
        left join sys_dictionary d on sxm.weld_kind = d.id
        left join sys_dictionary d1 on sxm.weld_status = d1.id
        left join sys_dictionary d2 on sxm.weld_firm = d2.id
        left join sys_dictionary d3 on sxm.sx_model = d3.id
        left join sys_dictionary d4 on sxm.area = d4.id
        left join sys_dictionary d5 on sxm.bay = d5.id
        left join sys_dept s on sxm.dept_id = s.id
        left join machine_gather_info on FIND_IN_SET( machine_gather_info.id,sxm.weld_cid )
        left join task_claim claim on sxm.id=claim.weld_id AND sxm.id IN (
        SELECT tem.weld_id FROM (
        SELECT weld_id,task_id from task_claim group BY weld_id,task_id order by claim_time desc
        ) tem  GROUP BY weld_id
        )
        left join task_info ti on claim.task_id=ti.id and ti.`status`=51
        <where>
            <if test="machineNo != null and machineNo != ''">
                and  sxm.weld_no = #{machineNo}
            </if>
            <if test="type != null and type != ''">
                and  d.id = #{type}
            </if>
            <if test="grade != null and grade != ''">
                and  s.id = #{grade}
            </if>
            <if test="status != null and status != ''">
                and  d1.id = #{status}
            </if>
            <if test="firm != null and firm != ''">
                and  d2.id = #{firm}
            </if>
            <if test="gatherNo != null and gatherNo != ''">
                and  g.gather_no = #{gatherNo}
            </if>
            <if test="ipPath != null and ipPath != ''">
                and  sxm.weld_ip = #{ipPath}
            </if>
            <if test="model != null and model != ''">
                and  sxm.sx_model = #{model}
            </if>
            <if test="area != null and area != ''">
                and  sxm.area = #{area}
            </if>
            <if test="bay != null and bay != ''">
                and  sxm.bay = #{bay}
            </if>
        </where>
        group by sxm.weld_no
        union all
        select if(ti.task_no is null,0,1) taskFlag,m.id,m.machine_no,m.create_time,m.type,
        m.dept_id,m.g_id,m.`status`,m.model,m.firm,
        m.is_network,GROUP_CONCAT(DISTINCT machine_gather_info.gather_no ) gather_no,d.value_name typeStr,
        d1.value_name statusStr,d2.value_name firmStr,d3.value_name modelStr,s.`name`,m.ip_path,
        m.area,m.bay,d4.value_name areaStr,d5.value_name bayStr,'otc' macFlag
        from machine_weld_info m
        left join sys_dictionary d on m.type = d.id
        left join sys_dictionary d1 on m.`status` = d1.id
        left join sys_dictionary d2 on m.firm = d2.id
        left join sys_dictionary d3 on m.model = d3.id
        left join sys_dictionary d4 on m.area = d4.id
        left join sys_dictionary d5 on m.bay = d5.id
        left join sys_dept s on m.dept_id = s.id
        left join machine_gather_info on FIND_IN_SET( machine_gather_info.id,m.g_id )
        left join task_claim claim on m.id=claim.weld_id AND m.id IN (
        SELECT tem.weld_id FROM (
        SELECT weld_id,task_id from task_claim group BY weld_id,task_id order by claim_time desc
        ) tem  GROUP BY weld_id
        )
        left join task_info ti on claim.task_id=ti.id and ti.`status`=51
        <where>
            <if test="machineNo != null and machineNo != ''">
                and  m.machine_no = #{machineNo}
            </if>
            <if test="type != null and type != ''">
                and  d.id = #{type}
            </if>
            <if test="grade != null and grade != ''">
                and  s.id = #{grade}
            </if>
            <if test="status != null and status != ''">
                and  d1.id = #{status}
            </if>
            <if test="firm != null and firm != ''">
                and  d2.id = #{firm}
            </if>
            <if test="isNetwork != null">
                and  m.is_network = #{isNetwork}
            </if>
            <if test="gatherNo != null and gatherNo != ''">
                and  g.gather_no = #{gatherNo}
            </if>
            <if test="ipPath != null and ipPath != ''">
                and  m.ip_path = #{ipPath}
            </if>
            <if test="model != null and model != ''">
                and  m.model = #{model}
            </if>
            <if test="area != null and area != ''">
                and  m.area = #{area}
            </if>
            <if test="bay != null and bay != ''">
                and  m.bay = #{bay}
            </if>
        </where>
        group by m.machine_no)w
    </select>

    <!--批量插入-->
    <insert id="insertMachineWeldInfoByGroup">
        insert into machine_weld_info(machine_no,`type`,dept_id,status,firm,is_netWork,g_id,model,create_time,ip_path,area,bay)
        values
        <foreach collection="machineWeldInfos" item="item" index="index" separator=",">
            (#{item.machineNo},#{item.type},#{item.deptId},#{item.status},#{item.firm},#{item.isNetwork},#{item.gId},#{item.model},#{item.createTime},#{item.ipPath},#{item.area},#{item.bay})
        </foreach>
    </insert>
</mapper>
